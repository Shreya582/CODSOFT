class Contact:
    def __init__(self, name, phone_number, email, address):
        self.name = name
        self.phone_number = phone_number
        self.email = email
        self.address = address

class ContactBook:
    def __init__(self):
        self.contacts = {}

    def add_contact(self):
        """Add a new contact to the contact book."""
        name = input("Enter contact name: ")
        phone_number = input("Enter contact phone number: ")
        email = input("Enter contact email: ")
        address = input("Enter contact address: ")
        self.contacts[name] = Contact(name, phone_number, email, address)
        print("Contact added successfully!")

    def view_contacts(self):
        """Display a list of all saved contacts."""
        if not self.contacts:
            print("No contacts found.")
            return
        print("Contact List:")
        for name, contact in self.contacts.items():
            print(f"{name}: {contact.phone_number}")

    def search_contact(self):
        """Search for a contact by name or phone number."""
        search_term = input("Enter name or phone number to search: ")
        for name, contact in self.contacts.items():
            if search_term in [name, contact.phone_number]:
                print(f"Name: {contact.name}")
                print(f"Phone Number: {contact.phone_number}")
                print(f"Email: {contact.email}")
                print(f"Address: {contact.address}")
                return
        print("Contact not found.")

    def update_contact(self):
        """Update a contact's details."""
        name = input("Enter contact name to update: ")
        if name not in self.contacts:
            print("Contact not found.")
            return
        contact = self.contacts[name]
        contact.name = input("Enter new name (press enter to skip): ") or contact.name
        contact.phone_number = input("Enter new phone number (press enter to skip): ") or contact.phone_number
        contact.email = input("Enter new email (press enter to skip): ") or contact.email
        contact.address = input("Enter new address (press enter to skip): ") or contact.address
        print("Contact updated successfully!")

    def delete_contact(self):
        """Delete a contact."""
        name = input("Enter contact name to delete: ")
        if name not in self.contacts:
            print("Contact not found.")
            return
        del self.contacts[name]
        print("Contact deleted successfully!")

def main():
    contact_book = ContactBook()
    while True:
        print("\nContact Book Menu:")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Quit")
        choice = input("Enter your choice (1/2/3/4/5/6): ")
        if choice == "1":
            contact_book.add_contact()
        elif choice == "2":
            contact_book.view_contacts()
        elif choice == "3":
            contact_book.search_contact()
        elif choice == "4":
            contact_book.update_contact()
        elif choice == "5":
            contact_book.delete_contact()
        elif choice == "6":
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
